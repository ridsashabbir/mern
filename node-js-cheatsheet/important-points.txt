- node js can be used on the backend as well as on the frontend
- node js is neither a framework not a programming language
- node js is a open source and cross platform runtime environment for executing javascript code outside the browser
- install node js and check it's version along with npm
- run your code using 'node index.js' command
- repl in an easy to use cli tool which is used for processing node js expressions
- repl is used to debug javascript code and useful for experimenting with node js code
- REPL stands for Read - Eval - Print - Loop
- Read - reads user's input, parse the input in javascript data structure and stores in memory
- Eval - takes and evaluated the data structure 
- Print - prints the result
- Loop - loops the above command untill user presses crtl+c twice
- write node in the terminal to open node repl
- node js core modules are set of functions that you want to include in your application
- file system is one of the core modules of node js 
- using writeFileSync, it will create the file provided in first argument, if the file exists then it won't create new file but override the data of that file
- if you don't want to override the data of file, thenn use append method
- node js includes additional data called buffer data 
- buffer data is not available in browser javascript- buffer is mainly used to store binary data
- while reading data from file or recieve a packet over network, you will always receive buffer data 
- while reading a file if you want to see the original data and not buffer data, use toString 
- callback function is required in async but not in sync 
- you will experince a queue like waiting list in sync but in asyn there is no queue or waiting list